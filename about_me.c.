#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_MEMBERS 10
#define MAX_NAME_LEN 30
#define MAX_NICK_LEN 20
#define NUM_TESTS 7

// 체력 항목 이름
const char *test_names[NUM_TESTS] = {
    "1마일 러닝", "스피드 스프린트", "푸시업", "스쿼트", "팔굽혀 펴기", "수영", "무게 들기"
};

// 멤버 구조체
typedef struct {
    char name[MAX_NAME_LEN];
    char nickname[MAX_NICK_LEN];
} Member;

// 초기 멤버 정보
Member milliways_members[MAX_MEMBERS] = {
    {"고은", "goeun"},
    {"원철", "wonchul"},
    {"영진", "youngjin"},
    {"혜경", "hyekyung"},
    {"아서", "arthur"}
};

int member_count = 5;

// 체력 점수 배열
float health_scores[MAX_MEMBERS][NUM_TESTS] = {0};

// 닉네임 인덱스 찾기
int findMemberIndex(const char *nickname) {
    for (int i = 0; i < member_count; i++) {
        if (strcmp(milliways_members[i].nickname, nickname) == 0) {
            return i;
        }
    }
    return -1;
}

// 체력 입력 함수
void setHealth() {
    char nickname[MAX_NICK_LEN];
    char input[256];

    printf("[닉네임 입력]: ");
    scanf("%s", nickname);

    int idx = findMemberIndex(nickname);
    if (idx == -1) {
        printf("⚠️ 해당 닉네임을 찾을 수 없습니다.\n");
        return;
    }

    printf("7개 항목 데이터를 쉼표로 구분해 입력하세요.\n");
    printf("예: 12.5,13.0,5.2,4.8,6.1,10.9,1.3\n");
    printf("[입력]: ");
    scanf(" %[^\n]", input);

    char *token = strtok(input, ",");
    int count = 0;

    while (token && count < NUM_TESTS) {
        health_scores[idx][count++] = atof(token);
        token = strtok(NULL, ",");
    }

    if (count == NUM_TESTS) {
        printf("✅ 데이터가 저장되었습니다.\n");
    } else {
        printf("⚠️ 항목 수가 부족합니다. 실패.\n");
    }
}

// 체력 조회 함수
void getHealth() {
    char opt;
    printf("[전체 조회(a) / 닉네임 조회(b) / 항목별 조회(c)] 선택: ");
    scanf(" %c", &opt);

    if (opt == 'a') {
        for (int i = 0; i < member_count; i++) {
            printf("이름: %s, 닉네임: %s\n", milliways_members[i].name, milliways_members[i].nickname);
            for (int j = 0; j < NUM_TESTS; j++) {
                printf("  %s: %.2f\n", test_names[j], health_scores[i][j]);
            }
            printf("--------------------------------------------------\n");
        }

    } else if (opt == 'b') {
        char nickname[MAX_NICK_LEN];
        printf("조회할 닉네임 입력: ");
        scanf("%s", nickname);
        int idx = findMemberIndex(nickname);

        if (idx == -1) {
            printf("⚠️ 닉네임이 존재하지 않습니다.\n");
            return;
        }

        printf("이름: %s, 닉네임: %s\n", milliways_members[idx].name, nickname);
        for (int j = 0; j < NUM_TESTS; j++) {
            printf("  %s: %.2f\n", test_names[j], health_scores[idx][j]);
        }

    } else if (opt == 'c') {
        char nickname[MAX_NICK_LEN];
        int test_idx;

        printf("닉네임 입력: ");
        scanf("%s", nickname);
        int idx = findMemberIndex(nickname);
        if (idx == -1) {
            printf("⚠️ 닉네임이 존재하지 않습니다.\n");
            return;
        }

        printf("체력 항목 선택 (1~7):\n");
        for (int i = 0; i < NUM_TESTS; i++) {
            printf("%d. %s\n", i + 1, test_names[i]);
        }

        scanf("%d", &test_idx);
        if (test_idx < 1 || test_idx > NUM_TESTS) {
            printf("⚠️ 잘못된 번호입니다.\n");
            return;
        }

        printf("이름: %s, 닉네임: %s\n", milliways_members[idx].name, nickname);
        printf("  %s: %.2f\n", test_names[test_idx - 1], health_scores[idx][test_idx - 1]);

    } else {
        printf("⚠️ 잘못된 선택입니다.\n");
    }
}

// 메뉴
void showMenu() {
    int select;
    do {
        printf("\n===== 밀리웨이즈 트레이닝 시스템 =====\n");
        printf("[II. 훈련 > 1. 체력과 지식]\n");
        printf("  A. 체력 상태 입력 (1)\n");
        printf("  B. 체력 상태 조회 (2)\n");
        printf("  종료 (0)\n");
        printf("메뉴 선택: ");
        scanf("%d", &select);

        switch (select) {
            case 1:
                setHealth();
                break;
            case 2:
                getHealth();
                break;
            case 0:
                printf("👋 프로그램을 종료합니다.\n");
                break;
            default:
                printf("⚠️ 유효하지 않은 선택입니다.\n");
        }
    } while (select != 0);
}

// 메인
int main() {
    showMenu();
    return 0;
}
